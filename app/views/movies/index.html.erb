<div class="container" ng-app="controllers.index" ng-controller="IndexCtrl">
  
  <div class="big-head hidden-xs">
    <div class="headline">
      <h1 class="text-left title">Hbizzle</h1>
      <p class="text-left kurt"><em>It's Go Time.</em></p>
    </div>

    <div class="form-group search-input col-lg-4 col-md-4 col-sm-6">
      <input type="text" class="form-control" ng-model="textFilter" placeholder="Search for a movie!">
    </div>
  </div>

  <div class="clearfix"></div>

  <div class="small-head visible-xs">
    <div>
      <h1 class="text-center title">Hbizzle</h1>
      <p class="text-center kurt"><em>It's Go Time.</em></p>
    </div>

    <div style="padding: 0 15px 15px 15px;">
      <input type="text" class="form-control" ng-model="textFilter" placeholder="Search for a movie!">
    </div>
  </div>

  <div class="movies-container">

    <div class="table-responsive table-wrapper" ng-show="(movies | filter:textFilter).length">
      <table class="table movies">
        <thead>
          <tr>
            <th data-sorted="{{predicate == '-title'}}" data-sorted-direction="{{sortDirection()}}" class="text-center title" width="12%"><a href="" ng-click="updatePredicate('-title')">Title</a></th>
            <th data-sortable="false" class="text-center image hidden-xs">Image</th>
            <th data-sortable="false" class="text-center summary hidden-md hidden-sm hidden-xs" width="26%">Summary</th>
            <th data-sorted="{{predicate == '-year'}}" data-sorted-direction="{{sortDirection()}}" class="text-center hidden-xs"><a href="" ng-click="updatePredicate('-year')">Year</a></th>
            <th data-sortable="false" class="text-center hidden-xs">IMDB</th>
            <th data-sorted="{{predicate == '-rating'}}" data-sorted-direction="{{sortDirection()}}" class="text-center hidden-xs"><a href="" ng-click="updatePredicate('-rating')">Rating</a></th>
            <th data-sorted="{{predicate == '-meta_score'}}" data-sorted-direction="{{sortDirection()}}" class="text-center"><a href="" ng-click="updatePredicate('-meta_score')">Hbizzle</a></th>
            <th data-sorted="{{predicate == '-imdb_rating'}}" data-sorted-direction="{{sortDirection()}}" class="text-center hidden-md hidden-sm hidden-xs"><a href="" ng-click="updatePredicate('-imdb_rating')">IMDB</a></th>
            <th data-sorted="{{predicate == '-rotten_critics_score'}}" data-sorted-direction="{{sortDirection()}}" class="text-center hidden-md hidden-sm hidden-xs"><a href="" ng-click="updatePredicate('-rotten_critics_score')">R/C</a></th>
            <th data-sorted="{{predicate == '-rotten_audience_score'}}" data-sorted-direction="{{sortDirection()}}" class="text-center hidden-md hidden-sm hidden-xs"><a href="" ng-click="updatePredicate('-rotten_audience_score')">R/A</a></th>
          </tr>
        </thead>

        <tbody ng-cloak>
          <tr ng-repeat="movie in (filteredMovies = (movies | orderBy:predicate:reverse | startFrom:currentPage * pageSize - pageSize | limitTo:pageSize | filter:textFilter))">
            <td class="title"><a href="{{ movie.hbo_link }}" target="_blank">{{ movie.title }}</a></td>
            <td class="hidden-xs text-center"><img ng-src="{{ movie.image_url }}"></td>
            <td class="hidden-md hidden-sm hidden-xs summary">{{ movie.summary }}</td>
            <td class="text-center hidden-xs">{{ movie.year }}</td>
            <td class="text-center hidden-xs"><a href="{{ movie.imdb_link }}" target="_blank">IMDB</a></td>
            <td class="text-center hidden-xs">{{ movie.rating }}</td>
            <td class="text-center score">{{ movie.meta_score }}</td>
            <td class="text-center hidden-md hidden-sm hidden-xs">{{ movie.imdb_rating }}</td>
            <td class="text-center hidden-md hidden-sm hidden-xs">{{ movie.rotten_critics_score }}</td>
            <td class="text-center hidden-md hidden-sm hidden-xs">{{ movie.rotten_audience_score }}</td>
          </tr>
        </tbody>
      </table>
    </div>

    <p class="text-center no-match" ng-cloak ng-hide="(movies | filter:textFilter).length">I couldn't find anything that matched your query, Bizzle.</p>

  </div>
  <div class="page text-center">
    <pagination class="hidden-xs" total-items="(movies | filter:textFilter).length" page="currentPage" items-per-page="pageSize" max-size="showPagesNum" boundary-links="true" rotate="false" first-text="&laquo;" last-text="&raquo;" class="pagination"></pagination>
    <pager class="visible-xs col-centered" total-items="(movies | filter:textFilter).length" page="currentPage"></pager>
  </div>

  <hr />

  <footer class="text-center">
    <p class="who-are-we"><strong><a href="" data-toggle="modal" data-target="#what-is-hbizzle">What is Hbizzle?</a></strong></p>
    <p>Made with ambivalence by <a href="http://www.twitter.com/tylermdavis">@tylermdavis</a>.</p>
    <p>Code available on <a href="https://github.com/tylerdavis/hbizzle">Github</a>, licensed under <a href="http://opensource.org/licenses/MIT">MIT</a>.</p>
  </footer>

  <div id="what-is-hbizzle" class="modal fade">
    <div class="modal-dialog">
      <div class="modal-content">
        <div class="modal-header">
          <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
          <h4 class="modal-title">What is Hbizzle?</h4>
        </div>
        <div class="modal-body">
          <p><strong>The problem:</strong> A certain online media streaming service, which we will affectionately call human body oder, has an awful user experience.  It's hard enough to find movies at all, let alone good movies.</p>
          <p><strong>The solution:</strong> Hbizzle.</p>
          <p>Hbizzle is a learning system.  Aggregating all the critical scores of each film from human body oder, the hbizzle score is a combination of these scores and <em>soon</em> a weighted representation of total plays derived from hbizzle.com.  That means, that if you use Hbizzle as an interface to human body odor, it's going to learn from you, and recommend you better movies over time.  Pretty sweet, right?</p>
          <p>A side note: I'm currently tracking plays, but have not implemented them in the hbizzle algorithm yet.  I need more data, so that means, get watching!</p>
          <p>For any feedback, feel free to drop an issue on the open source project over at <a href="https://github.com/tylerdavis/hbizzle">Github</a> or tweet <a href="https://twitter.com/tylermdavis">me</a>.  Thanks for your interest!</p>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-primary" data-dismiss="modal">Got it!</button>
        </div>
      </div>
    </div>
  </div>

  <script>
    window.movies = <%= raw @movies.to_json(except: [:expire, :hbo_id, :created_at, :updated_at], methods: [:hbo_link, :meta_score, :image_url]) %>;
  </script>


</div>
